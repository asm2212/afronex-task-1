{"mappings":"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","sources":["packages/react/alert-dialog/src/index.ts","packages/react/alert-dialog/src/AlertDialog.tsx"],"sourcesContent":["export {\n  createAlertDialogScope,\n  //\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Action,\n  Cancel,\n  Title,\n  Description,\n} from './AlertDialog';\nexport type {\n  AlertDialogProps,\n  AlertDialogTriggerProps,\n  AlertDialogPortalProps,\n  AlertDialogOverlayProps,\n  AlertDialogContentProps,\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogTitleProps,\n  AlertDialogDescriptionProps,\n} from './AlertDialog';\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { createDialogScope } from '@radix-ui/react-dialog';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Slottable } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_NAME = 'AlertDialog';\n\ntype ScopedProps<P> = P & { __scopeAlertDialog?: Scope };\nconst [createAlertDialogContext, createAlertDialogScope] = createContextScope(ROOT_NAME, [\n  createDialogScope,\n]);\nconst useDialogScope = createDialogScope();\n\ntype DialogProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Root>;\ninterface AlertDialogProps extends Omit<DialogProps, 'modal'> {}\n\nconst AlertDialog: React.FC<AlertDialogProps> = (props: ScopedProps<AlertDialogProps>) => {\n  const { __scopeAlertDialog, ...alertDialogProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Root {...dialogScope} {...alertDialogProps} modal={true} />;\n};\n\nAlertDialog.displayName = ROOT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTrigger\n * -----------------------------------------------------------------------------------------------*/\nconst TRIGGER_NAME = 'AlertDialogTrigger';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof DialogPrimitive.Trigger>;\ntype DialogTriggerProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps extends DialogTriggerProps {}\n\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  (props: ScopedProps<AlertDialogTriggerProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...triggerProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Trigger {...dialogScope} {...triggerProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'AlertDialogPortal';\n\ntype DialogPortalProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Portal>;\ninterface AlertDialogPortalProps extends DialogPortalProps {}\n\nconst AlertDialogPortal: React.FC<AlertDialogPortalProps> = (\n  props: ScopedProps<AlertDialogPortalProps>\n) => {\n  const { __scopeAlertDialog, ...portalProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Portal {...dialogScope} {...portalProps} />;\n};\n\nAlertDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'AlertDialogOverlay';\n\ntype AlertDialogOverlayElement = React.ElementRef<typeof DialogPrimitive.Overlay>;\ntype DialogOverlayProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>;\ninterface AlertDialogOverlayProps extends DialogOverlayProps {}\n\nconst AlertDialogOverlay = React.forwardRef<AlertDialogOverlayElement, AlertDialogOverlayProps>(\n  (props: ScopedProps<AlertDialogOverlayProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...overlayProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Overlay {...dialogScope} {...overlayProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogOverlay.displayName = OVERLAY_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AlertDialogContent';\n\ntype AlertDialogContentContextValue = {\n  cancelRef: React.MutableRefObject<AlertDialogCancelElement | null>;\n};\n\nconst [AlertDialogContentProvider, useAlertDialogContentContext] =\n  createAlertDialogContext<AlertDialogContentContextValue>(CONTENT_NAME);\n\ntype AlertDialogContentElement = React.ElementRef<typeof DialogPrimitive.Content>;\ntype DialogContentProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends Omit<DialogContentProps, 'onPointerDownOutside' | 'onInteractOutside'> {}\n\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  (props: ScopedProps<AlertDialogContentProps>, forwardedRef) => {\n    const { __scopeAlertDialog, children, ...contentProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const contentRef = React.useRef<AlertDialogContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const cancelRef = React.useRef<AlertDialogCancelElement | null>(null);\n\n    return (\n      <DialogPrimitive.WarningProvider\n        contentName={CONTENT_NAME}\n        titleName={TITLE_NAME}\n        docsSlug=\"alert-dialog\"\n      >\n        <AlertDialogContentProvider scope={__scopeAlertDialog} cancelRef={cancelRef}>\n          <DialogPrimitive.Content\n            role=\"alertdialog\"\n            {...dialogScope}\n            {...contentProps}\n            ref={composedRefs}\n            onOpenAutoFocus={composeEventHandlers(contentProps.onOpenAutoFocus, (event) => {\n              event.preventDefault();\n              cancelRef.current?.focus({ preventScroll: true });\n            })}\n            onPointerDownOutside={(event) => event.preventDefault()}\n            onInteractOutside={(event) => event.preventDefault()}\n          >\n            {/**\n             * We have to use `Slottable` here as we cannot wrap the `AlertDialogContentProvider`\n             * around everything, otherwise the `DescriptionWarning` would be rendered straight away.\n             * This is because we want the accessibility checks to run only once the content is actually\n             * open and that behaviour is already encapsulated in `DialogContent`.\n             */}\n            <Slottable>{children}</Slottable>\n            {process.env.NODE_ENV === 'development' && (\n              <DescriptionWarning contentRef={contentRef} />\n            )}\n          </DialogPrimitive.Content>\n        </AlertDialogContentProvider>\n      </DialogPrimitive.WarningProvider>\n    );\n  }\n);\n\nAlertDialogContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'AlertDialogTitle';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof DialogPrimitive.Title>;\ntype DialogTitleProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>;\ninterface AlertDialogTitleProps extends DialogTitleProps {}\n\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props: ScopedProps<AlertDialogTitleProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...titleProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Title {...dialogScope} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'AlertDialogDescription';\n\ntype AlertDialogDescriptionElement = React.ElementRef<typeof DialogPrimitive.Description>;\ntype DialogDescriptionProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>;\ninterface AlertDialogDescriptionProps extends DialogDescriptionProps {}\n\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props: ScopedProps<AlertDialogDescriptionProps>, forwardedRef) => {\n  const { __scopeAlertDialog, ...descriptionProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Description {...dialogScope} {...descriptionProps} ref={forwardedRef} />;\n});\n\nAlertDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogAction\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACTION_NAME = 'AlertDialogAction';\n\ntype AlertDialogActionElement = React.ElementRef<typeof DialogPrimitive.Close>;\ntype DialogCloseProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Close>;\ninterface AlertDialogActionProps extends DialogCloseProps {}\n\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  (props: ScopedProps<AlertDialogActionProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...actionProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Close {...dialogScope} {...actionProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogAction.displayName = ACTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogCancel\n * -----------------------------------------------------------------------------------------------*/\n\nconst CANCEL_NAME = 'AlertDialogCancel';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof DialogPrimitive.Close>;\ninterface AlertDialogCancelProps extends DialogCloseProps {}\n\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  (props: ScopedProps<AlertDialogCancelProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...cancelProps } = props;\n    const { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog);\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const ref = useComposedRefs(forwardedRef, cancelRef);\n    return <DialogPrimitive.Close {...dialogScope} {...cancelProps} ref={ref} />;\n  }\n);\n\nAlertDialogCancel.displayName = CANCEL_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<AlertDialogContentElement>;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef }) => {\n  const MESSAGE = `\\`${CONTENT_NAME}\\` requires a description for the component to be accessible for screen reader users.\n\nYou can add a description to the \\`${CONTENT_NAME}\\` by passing a \\`${DESCRIPTION_NAME}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a description by assigning it an \\`id\\` and passing the same value to the \\`aria-describedby\\` prop in \\`${CONTENT_NAME}\\`. If the description is confusing or duplicative for sighted users, you can use the \\`@radix-ui/react-visually-hidden\\` primitive as a wrapper around your description component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;\n\n  React.useEffect(() => {\n    const hasDescription = document.getElementById(\n      contentRef.current?.getAttribute('aria-describedby')!\n    );\n    if (!hasDescription) console.warn(MESSAGE);\n  }, [MESSAGE, contentRef]);\n\n  return null;\n};\n\nconst Root = AlertDialog;\nconst Trigger = AlertDialogTrigger;\nconst Portal = AlertDialogPortal;\nconst Overlay = AlertDialogOverlay;\nconst Content = AlertDialogContent;\nconst Action = AlertDialogAction;\nconst Cancel = AlertDialogCancel;\nconst Title = AlertDialogTitle;\nconst Description = AlertDialogDescription;\n\nexport {\n  createAlertDialogScope,\n  //\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Action,\n  Cancel,\n  Title,\n  Description,\n};\nexport type {\n  AlertDialogProps,\n  AlertDialogTriggerProps,\n  AlertDialogPortalProps,\n  AlertDialogOverlayProps,\n  AlertDialogContentProps,\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogTitleProps,\n  AlertDialogDescriptionProps,\n};\n"],"names":["createAlertDialogScope","AlertDialog","AlertDialogTrigger","AlertDialogPortal","AlertDialogOverlay","AlertDialogContent","AlertDialogAction","AlertDialogCancel","AlertDialogTitle","AlertDialogDescription","Root","Trigger","Portal","Overlay","Content","Action","Cancel","Title","Description","React","createContextScope","useComposedRefs","DialogPrimitive","createDialogScope","composeEventHandlers","Slottable","ROOT_NAME","createAlertDialogContext","useDialogScope","props","__scopeAlertDialog","alertDialogProps","dialogScope","TRIGGER_NAME","forwardRef","forwardedRef","triggerProps","PORTAL_NAME","portalProps","OVERLAY_NAME","overlayProps","CONTENT_NAME","AlertDialogContentProvider","useAlertDialogContentContext","children","contentProps","contentRef","useRef","composedRefs","cancelRef","TITLE_NAME","onOpenAutoFocus","event","preventDefault","current","focus","preventScroll","process","env","NODE_ENV","titleProps","DESCRIPTION_NAME","descriptionProps","ACTION_NAME","actionProps","CANCEL_NAME","cancelProps","ref","DescriptionWarning","MESSAGE","useEffect","hasDescription","document","getElementById","getAttribute","console","warn"],"version":3,"file":"index.js.map"}